#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞...\n');

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
const requiredFiles = [
  'vercel.json',
  'frontend/package.json',
  'backend/server.py',
  'backend/requirements.txt'
];

let allGood = true;

requiredFiles.forEach(file => {
  if (fs.existsSync(file)) {
    console.log(`‚úÖ ${file}`);
  } else {
    console.log(`‚ùå ${file} - –ù–ï –ù–ê–ô–î–ï–ù`);
    allGood = false;
  }
});

// –ü—Ä–æ–≤–µ—Ä—è–µ–º vercel.json
if (fs.existsSync('vercel.json')) {
  try {
    const vercelConfig = JSON.parse(fs.readFileSync('vercel.json', 'utf8'));
    console.log('\nüìã –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Vercel:');
    console.log(`   - –í–µ—Ä—Å–∏—è: ${vercelConfig.version}`);
    console.log(`   - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–±–æ—Ä–æ–∫: ${vercelConfig.builds?.length || 0}`);
    console.log(`   - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Ä—à—Ä—É—Ç–æ–≤: ${vercelConfig.routes?.length || 0}`);
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è vercel.json');
    allGood = false;
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º package.json —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
if (fs.existsSync('frontend/package.json')) {
  try {
    const packageJson = JSON.parse(fs.readFileSync('frontend/package.json', 'utf8'));
    console.log('\nüì¶ –§—Ä–æ–Ω—Ç–µ–Ω–¥:');
    console.log(`   - –ù–∞–∑–≤–∞–Ω–∏–µ: ${packageJson.name}`);
    console.log(`   - –í–µ—Ä—Å–∏—è: ${packageJson.version}`);
    console.log(`   - –°–∫—Ä–∏–ø—Ç—ã: ${Object.keys(packageJson.scripts || {}).join(', ')}`);
  } catch (error) {
    console.log('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è frontend/package.json');
    allGood = false;
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º requirements.txt
if (fs.existsSync('backend/requirements.txt')) {
  const requirements = fs.readFileSync('backend/requirements.txt', 'utf8');
  const hasMangum = requirements.includes('mangum');
  console.log('\nüêç –ë—ç–∫–µ–Ω–¥:');
  console.log(`   - Mangum: ${hasMangum ? '‚úÖ' : '‚ùå'}`);
  console.log(`   - FastAPI: ${requirements.includes('fastapi') ? '‚úÖ' : '‚ùå'}`);
}

console.log('\nüìù –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ Vercel:');
console.log('   –ë—ç–∫–µ–Ω–¥:');
console.log('   - MONGO_URL');
console.log('   - DB_NAME');
console.log('   - CORS_ORIGINS');
console.log('   –§—Ä–æ–Ω—Ç–µ–Ω–¥:');
console.log('   - REACT_APP_BACKEND_URL');

if (allGood) {
  console.log('\nüéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é.');
  console.log('üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./deploy.sh');
} else {
  console.log('\n‚ö†Ô∏è  –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –∏—Ö –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º.');
  process.exit(1);
} 